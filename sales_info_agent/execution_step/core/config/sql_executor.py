"""
SQL Execution Node - Executes SQL queries against MySQL database.
"""

from sales_info_agent.scoping_step.core.config.state_and_schemas import AgentState
from sales_info_agent.execution_step.core.database.mysql_connection import execute_query
from langchain_core.messages import AIMessage


def execute_sql_query(state: AgentState) -> dict:
    """
    Execute the SQL query generated by the scoping step.

    Args:
        state: Current agent state containing sql_query

    Returns:
        Updated state with sql_results or sql_error
    """
    sql_query = state.get("sql_query")

    if not sql_query:
        return {
            "sql_error": "No SQL query found in state",
            "supervisor_messages": [
                AIMessage(content="Error: No SQL query to execute")
            ]
        }

    print(f"\n{'=' * 50}")
    print("EXECUTING SQL QUERY")
    print(f"{'=' * 50}")
    print(sql_query)
    print(f"{'=' * 50}\n")

    results, error = execute_query(sql_query)

    if error:
        return {
            "sql_error": error,
            "sql_results": None,
            "supervisor_messages": [
                AIMessage(content=f"Database Error: {error}")
            ]
        }

    result_count = len(results) if results else 0
    result_info = f"Query executed successfully: {result_count} result(s) found"

    if result_count > 0:
        # Show first result as sample
        first_result = results[0]
        result_info += f"\nSample: {first_result}"

    return {
        "sql_results": results,
        "sql_error": None,
        "supervisor_messages": [
            AIMessage(content=result_info)
        ]
    }